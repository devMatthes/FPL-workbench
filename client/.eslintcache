[{"/mnt/d/Code/FPL-workbench/client/src/index.js":"1","/mnt/d/Code/FPL-workbench/client/src/App.js":"2","/mnt/d/Code/FPL-workbench/client/src/reportWebVitals.js":"3","/mnt/d/Code/FPL-workbench/client/src/components/Tots.js":"4","/mnt/d/Code/FPL-workbench/client/src/views/TopPlayers.js":"5","/mnt/d/Code/FPL-workbench/client/src/components/BestPlayers.js":"6","/mnt/d/Code/FPL-workbench/client/src/helpers/FetchAllPlayers.js":"7","/mnt/d/Code/FPL-workbench/client/src/helpers/RateAllPlayers.js":"8"},{"size":657,"mtime":1610298649025,"results":"9","hashOfConfig":"10"},{"size":528,"mtime":1610298648957,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1610298649044,"results":"12","hashOfConfig":"10"},{"size":3940,"mtime":1610634197210,"results":"13","hashOfConfig":"10"},{"size":1728,"mtime":1610298649067,"results":"14","hashOfConfig":"10"},{"size":1327,"mtime":1610298648981,"results":"15","hashOfConfig":"10"},{"size":232,"mtime":1610298649007,"results":"16","hashOfConfig":"10"},{"size":767,"mtime":1610634549674,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"dqkt5a",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"/mnt/d/Code/FPL-workbench/client/src/index.js",["38","39","40"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport TopPlayers from './views/TopPlayers';\nimport TeamOfTheSeason from './components/Tots';\nimport BestPlayers from './components/BestPlayers';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <TeamOfTheSeason />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();",["41","42"],"/mnt/d/Code/FPL-workbench/client/src/App.js",[],"/mnt/d/Code/FPL-workbench/client/src/reportWebVitals.js",[],"/mnt/d/Code/FPL-workbench/client/src/components/Tots.js",["43","44","45"],"import { useState, useEffect } from 'react';\nimport { FetchAllPlayers } from '../helpers/FetchAllPlayers';\nimport { RatePlayer, RatePlayers } from '../helpers/RateAllPlayers'\n\nconst TOTS = () => {\n\n    const [players, setPlayers] = useState([]);\n    let playersLimits = {'1': 2, '2': 5, '3': 5, '4': 3};\n\n    useEffect(() => {\n        (async () => {\n            const fetchedPlayers = await FetchAllPlayers();\n            const ratedPlayers = await RatePlayers();\n            // const bestEleven = await maxKnapsack(fetchedPlayers, 100);\n            //const bestEleven = await findBestPlayers(fetchedPlayers, playersLimits, 100);\n\n            console.log(ratedPlayers);\n            setPlayers(ratedPlayers);\n        })();\n    }, []);\n\n    return ( \n        <div>\n            <h2>Tests</h2>\n            <table className=\"totsTable\"> \n                    <thead>\n                        <tr>\n                            <th>TEAM OF THE SEASON</th>\n                        </tr>\n                        <tr>\n                            <th>Position</th>\n                            <th>Player</th>\n                            <th>Pts</th>\n                            <th>Form</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {[].concat(players).filter(x => x.element_type === 1).sort((a,b) => b.total_points - a.total_points).slice(0, 2).map((player) => {\n                                return (\n                                    <tr>\n                                        <td>GKP</td>\n                                        <td>{player.web_name}</td>\n                                        <td>{player.total_points}</td>\n                                        <td>{player.form}</td>\n                                    </tr>\n                                );\n                            }\n                        )\n                    }\n                    {[].concat(players).filter(x => x.element_type === 2).sort((a,b) => b.total_points - a.total_points).slice(0, 5).map((player) => {\n                                return (\n                                    <tr>\n                                        <td>DEF</td>\n                                        <td>{player.web_name}</td>\n                                        <td>{player.total_points}</td>\n                                        <td>{player.form}</td>\n                                    </tr>\n                                );\n                            }\n                        )\n                    }\n                    {[].concat(players).filter(x => x.element_type === 3).sort((a,b) => b.total_points - a.total_points).slice(0, 5).map((player) => {\n                                return (\n                                    <tr>\n                                        <td>MID</td>\n                                        <td>{player.web_name}</td>\n                                        <td>{player.total_points}</td>\n                                        <td>{player.form}</td>\n                                    </tr>\n                                );\n                            }\n                        )\n                    }\n                    {[].concat(players).filter(x => x.element_type === 4).sort((a,b) => b.total_points - a.total_points).slice(0, 3).map((player) => {\n                                return (\n                                    <tr>\n                                        <td>FWD</td>\n                                        <td>{player.web_name}</td>\n                                        <td>{player.total_points}</td>\n                                        <td>{player.form}</td>\n                                    </tr>\n                                );\n                            }\n                        )\n                    }\n                    </tbody>\n            </table>      \n        </div>\n     );\n}\n \nexport default TOTS;","/mnt/d/Code/FPL-workbench/client/src/views/TopPlayers.js",[],"/mnt/d/Code/FPL-workbench/client/src/components/BestPlayers.js",[],"/mnt/d/Code/FPL-workbench/client/src/helpers/FetchAllPlayers.js",[],["46","47"],"/mnt/d/Code/FPL-workbench/client/src/helpers/RateAllPlayers.js",[],{"ruleId":"48","severity":1,"message":"49","line":4,"column":8,"nodeType":"50","messageId":"51","endLine":4,"endColumn":11},{"ruleId":"48","severity":1,"message":"52","line":5,"column":8,"nodeType":"50","messageId":"51","endLine":5,"endColumn":18},{"ruleId":"48","severity":1,"message":"53","line":7,"column":8,"nodeType":"50","messageId":"51","endLine":7,"endColumn":19},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"48","severity":1,"message":"58","line":3,"column":10,"nodeType":"50","messageId":"51","endLine":3,"endColumn":20},{"ruleId":"48","severity":1,"message":"59","line":8,"column":9,"nodeType":"50","messageId":"51","endLine":8,"endColumn":22},{"ruleId":"48","severity":1,"message":"60","line":12,"column":19,"nodeType":"50","messageId":"51","endLine":12,"endColumn":33},{"ruleId":"54","replacedBy":"61"},{"ruleId":"56","replacedBy":"62"},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'TopPlayers' is defined but never used.","'BestPlayers' is defined but never used.","no-native-reassign",["63"],"no-negated-in-lhs",["64"],"'RatePlayer' is defined but never used.","'playersLimits' is assigned a value but never used.","'fetchedPlayers' is assigned a value but never used.",["63"],["64"],"no-global-assign","no-unsafe-negation"]